searchState.loadedDescShard("futures_buffered", 0, "futures-buffered\nStream for the <code>buffered_unordered</code> method.\nStream for the <code>buffered_ordered</code> method.\nAn extension trait for <code>Stream</code>s that provides a variety of …\nAn extension trait for <code>Stream</code>s that provides a variety of …\nAn unbounded queue of futures.\nAn unbounded queue of futures.\nA set of futures which may complete in any order.\nA set of futures which may complete in any order.\nFuture for the <code>join_all</code> function.\nA combined stream that releases values in any order that …\nA combined stream that releases values in any order that …\nStream for the <code>try_buffered_unordered</code> method.\nStream for the <code>try_buffered_ordered</code> method.\nA convenience for futures that return <code>Result</code> values that …\nFuture for the <code>try_join_all</code> function.\nA convenience for streams that return <code>Result</code> values that …\nAn adaptor for creating a buffered list of pending futures.\nAn adaptor for creating a buffered list of pending futures.\nAn adaptor for creating a buffered list of pending futures …\nAn adaptor for creating a buffered list of pending futures …\nReturns the number of futures that can be contained in the …\nReturns the number of futures that can be contained in the …\nRuns this stream to completion, executing the provided …\nRuns this stream to completion, executing the provided …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstructs a new, empty <code>FuturesUnordered</code> with a fixed …\nConstructs a new, empty <code>FuturesUnorderedBounded</code> with a …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if the queue contains no futures\nReturns <code>true</code> if the queue contains no futures\nReturns <code>true</code> if the set contains no futures.\nReturns <code>true</code> if the set contains no futures.\nCreates a future which represents a collection of the …\nReturns the number of futures contained in the queue.\nReturns the number of futures contained in the queue.\nReturns the number of futures contained in the set.\nReturns the number of futures contained in the set.\nConstructs a new, empty <code>FuturesOrdered</code>\nConstructs a new, empty <code>FuturesOrderedBounded</code>\nConstructs a new, empty <code>FuturesUnordered</code>.\nConstructs a new, empty <code>FuturesUnorderedBounded</code> with the …\nCreate a new, empty <code>MergeUnbounded</code>.\nPush a future into the set.\nPush a future into the set.\nPush a stream into the set.\nPush a stream into the set.\nPushes a future to the back of the queue.\nPushes a future to the back of the queue.\nPushes a future to the front of the queue.\nPushes a future to the front of the queue.\nAn adaptor for creating a buffered list of pending futures.\nAn adaptor for creating a buffered list of pending futures.\nAn adaptor for creating a buffered list of pending futures …\nAn adaptor for creating a buffered list of pending futures …\nCreates a future which represents a collection of the …\nPush a future into the set.\nPush a future into the set.\nPushes a future to the back of the queue.\nPushes a future to the front of the queue.\nConstructs a new, empty <code>FuturesOrdered</code>\nConstructs a new, empty <code>FuturesUnordered</code> with the given …")