searchState.loadedDescShard("robotrs", 0, "Returns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA composable action\nA future that runs a command\nA command that runs a future\nA trait to convert into a command. Used for converting …\nConvert a type to a future, used for commands\nRuns when the command ends\nRuns for every tick of the scheduler\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRuns for every tick and returns true if the command is …\nRuns once at the beginning\nCreated through CommandExt::fuse\nCreated through CommandExt::until\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nPrevents a command from being executed after it is …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRuns a command until a predicate is true\nSimilar to the wpilib MotorSafety class. The easiest way …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn an RAII guard to the data within. Not guaranteed to …\nStop all motors and actuators. This method gets …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nContains the error value\nContains the success value\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA generic async trigger\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis creates a new trigger that polls the given closure …\nWait for the falling edge of the trigger. This returns …\nWait for the rising edge of the trigger. This returns …\nA trigger that activates if all the inner triggers are …\nAn extension trait that is implemented on tuples of …\nCreate a trigger that activates when all triggers are …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAn extension trait that is automatically implemented for …\nA trigger that activates when any inner trigger is …\nAn extension trait that is automatically implemented for …\nTurn this tuple into an AnyTrigger\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nActivates when the axis moves farther than the given …\nA trigger a given axis\nA target that defines when an Axis should trigger\nActivates when the axis moves lower than the given value\nActivates when the axis moves higher than the given value\nActivates when the axis moves closer than the given value. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChange the target of the trigger\nGet the value of the axis. Returns None if the axis does …\nA button trigger\nA target for the button trigger\nActivate the trigger when pressed\nActivate the trigger when released\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChange the target of the trigger\nGet the value of the button. Returns None if the button …\nA PS4 controller\nAn Xbox controller\nGet a trigger for the button. This trigger activates when …\nGet a trigger for the button. This trigger activates when …\nGet a trigger for the button. This trigger activates when …\nGet a trigger for the button. This trigger activates when …\nGet a trigger for the button. This trigger activates when …\nGet a trigger for the pov.\nGet a trigger for the pov.\nGet a trigger for the pov.\nGet a trigger for the pov.\nGet a trigger for the pov.\nGet a trigger for the pov.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet a trigger for the button. This trigger activates when …\nGet the raw value of the joystick, returning None if the …\nGet a trigger for the button. This trigger activates when …\nGet a trigger for the button. This trigger activates when …\nGet a trigger for the pov.\nGet a trigger for the pov.\nGet a trigger for the button. This trigger activates when …\nGet a trigger for the button. This trigger activates when …\nGet the raw value of the joystick, returning None if the …\nGet the raw value of the joystick, returning None if the …\nGet the raw value of the joystick, returning None if the …\nGet the raw value of the joystick, returning None if the …\nGet the raw value of the joystick, returning None if the …\nCreate a new Xbox controller.\nCreate a new PS4 controller.\nGet a trigger for the button. This trigger activates when …\nGet a trigger for the button. This trigger activates when …\nGet a trigger for the button. This trigger activates when …\nGet the raw value of the joystick, returning None if the …\nGet a trigger for the button. This trigger activates when …\nGet a trigger for the button. This trigger activates when …\nGet a trigger for the pov.\nGet a trigger for the pov.\nGet a trigger for the button. This trigger activates when …\nGet a trigger for the button. This trigger activates when …\nGet the raw value of the joystick, returning None if the …\nGet the raw value of the joystick, returning None if the …\nGet the raw value of the joystick, returning None if the …\nGet the raw value of the joystick, returning None if the …\nGet the raw value of the joystick, returning None if the …\nYou can likely ignore this error. It won’t actually …\nYou can likely ignore this error. It won’t actually …\nGet a trigger for the button. This trigger activates when …\nGet a trigger for the button. This trigger activates when …\nGet a trigger for the button. This trigger activates when …\nGet a trigger for the button. This trigger activates when …\nGet a trigger for the button. This trigger activates when …\nGet a trigger for the pov.\nGet a trigger for the pov.\nGet a trigger for the pov.\nGet a trigger for the pov.\nGet a trigger for the pov.\nGet a trigger for the pov.\nGet a trigger for the axis. See AxisTarget for possible …\nGet a trigger for the axis. See AxisTarget for possible …\nGet a trigger for the axis. See AxisTarget for possible …\nGet a trigger for the axis. See AxisTarget for possible …\nGet a trigger for the axis. See AxisTarget for possible …\nGet a trigger for the axis. See AxisTarget for possible …\nGet a trigger for the axis. See AxisTarget for possible …\nGet a trigger for the axis. See AxisTarget for possible …\nGet a trigger for the axis. See AxisTarget for possible …\nGet a trigger for the axis. See AxisTarget for possible …\nGet a trigger for the axis. See AxisTarget for possible …\nGet a trigger for the axis. See AxisTarget for possible …\nGet a trigger for the button. This trigger activates when …\nGet a trigger for the button. This trigger activates when …\nA trigger that activates when the trigger is activated …\nA double click extension trait that is auto implemented …\nAn extension trait that is automatically implemented for …\nAn extension trait that is automatically implemented for …\nCreate a new trigger that activates when this trigger is …\nCreate a new trigger that activates when this trigger is …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSpawns a new future using the main scheduler that waits …\nSpawns a new future using the main scheduler that waits …\nReturns the argument unchanged.\nGet a trigger for the axis at the given index (zero …\nGet the value for the axis at the given index  (zero …\nGet a trigger for the button at the given index (zero …\nGet the joystick index\nGet a trigger for the pov at the given index (zero …\nCalls <code>U::from(self)</code>.\nCreate a new generic joystick. <code>num</code> is zero based\nA trigger for a joystick pov. This the the d-pad\nThis defines when a Pov trigger activates\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSet the target of the trigger\nGet the current value of the pov. This is an angle in …\nBrake, slow down\nCoast, do not slow down\nThe error type for all operations of the motor controller. …\nWhat a motor should do when is is not being actively …\nDefines a motor controller. This trait is implemented for …\nDefines a motor contoller that supports setting the idle …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSet the idle mode of the motor to a specific <code>IdleMode</code>\nSet the percent output of the motor. This automatically …\nThis should only be called with a value between <code>-1</code> and <code>1</code>\nA handle to a cancellation scope. This type uses an Rc, so …\nCancel this scope, it will not be restarted\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the current cancellation scope\nCreate a new cancellation scope with the given future\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPanics if not called after the robot is scheduled or …\nThis is the main entry function. It starts the robot and …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")